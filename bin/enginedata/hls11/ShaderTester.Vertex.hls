#line 1 "enginedata\hls11\Default.Vertex.hls"

// ShaderTester Object 용 example Vertex Shader code

//  PhaseShading = 0,
//	PhaseEnvMap = 1,
//  PhaseFlat = 2,
//	PhaseDepth = 3,
//	PhaseShadowMap = 4,
//	PhaseMirror = 5,
//	PhasePosition = 6,
//	PhaseNormal = 7,
//	PhaseLinearDepth = 8,


cbuffer SHADER_EXTERN
{
	float4x4 ViewProj;
	float4x4 World;
	float4x4 WorldInverse;
	float4x4 View;
	float4x4 Proj;

	
};


// if normal.w == 0  no normal
// if tangent.w == 0  no tangent
// if UV.w == 0 no UV


// 입력정점 형식
struct VS_INPUT
{
    float3 Position : POSITION0;
    float4 UV : TEXCOORD0;
    float4 Normal : NORMAL; 
    float4 Diffuse : NORMAL1;
};





// 출력정점 형식
struct VS_OUTPUT
{
	float4 Position : POSITION0;
	float4 UV : TEXCOORD0;  // uv.z 는 depth 로 사용 한다 !!
	float4 InPosition : TEXCOORD1;
	float4 ViewPosition : TEXCOORD2;
	float4 Normal : NORMAL0; 
	float4 Diffuse : NORMAL1;
};





VS_OUTPUT VS(VS_INPUT In)
{
    VS_OUTPUT   Out;
    
    float4 posWorld;
    posWorld.xyz = In.Position;
    posWorld.w = 1.0;    

	float4x4 world;
	world = World;
	posWorld = mul(posWorld, world );

	float3 posWorldSave = posWorld.xyz / posWorld.w;
	Out.InPosition = float4(posWorldSave, 1.0);


	if (In.Normal.w > 0.001)
	{
		float3 normalTrans = mul( In.Normal.xyz, (float3x3)(world)) ;
		normalTrans = normalize(normalTrans);
		Out.Normal.xyz = normalTrans.xyz;
		Out.Normal.w = In.Normal.w;
	}
	else
		Out.Normal = In.Normal;


	Out.Diffuse = In.Diffuse;
	Out.UV = In.UV;

	posWorld = mul(posWorld, View); 
		
	Out.UV.z = posWorld.z / posWorld.w;
		
	Out.ViewPosition = mul(posWorld, Proj); 
	Out.Position = Out.ViewPosition;

   
	return Out;

}




