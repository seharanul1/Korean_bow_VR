#line 1 "enginedata\hls11\2DTypeFace.Vertex.hls"

cbuffer SHADER_EXTERN
{
	float4 ScreenWidth;
	float4 ScreenHeight;
	float4x4 Transform;
	float4x4 Orientation;
};



// 입력정점 형식
struct VS_INPUT
{
    float3 Position : POSITION;
    float3 UV : TEXCOORD0;
};


// 출력정점 형식
struct VS_OUTPUT
{
	float4 Position : POSITION;
	float3 UV : TEXCOORD0;  
	float4 InPosition : TEXCOORD1;
};


// uv.z 는 depth 로 사용 한다 !!




VS_OUTPUT VS(VS_INPUT In)
{
	//const float DepthRange = 100.0;


    VS_OUTPUT   Out;
    
    float4 pos;
    
    pos.xyz = In.Position;
    pos.w = 1.0;
	pos = mul(pos, Transform);
	
	Out.InPosition = pos ;
	
	float4 pos3;
	pos3.x = ((pos.x+0.5) * 2.0) / ScreenWidth - 1.0;
	pos3.y = (-(pos.y+0.5) * 2.0) / ScreenHeight + 1.0;
	pos3.z = 0.0;
	pos3.w = 1.0;
	pos3 = mul(pos3, Orientation);
	
	Out.Position.x = pos3.x;
	Out.Position.y = pos3.y;
		
	
	float4 outpos;
	outpos.x = pos3.x;
	outpos.y = pos3.y;
	outpos.z = pos.z ;
	outpos.w = 1.0;
	
	Out.Position = outpos;

	Out.UV = In.UV;
	
	//Out.UV.xy = In.UV.xy;
	//Out.UV.z = Out.Position.z / DepthRange;
	//Out.Diffuse = In.Diffuse;

	return Out;

}








